# Docker Compose configuration pour YORI
version: '3.8'

services:
  # Base de donn√©es MySQL
  mysql:
    image: mysql:8.0
    container_name: yori-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: yori_root_password
      MYSQL_DATABASE: yori_db
      MYSQL_USER: yori_user
      MYSQL_PASSWORD: yori_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/yori_complete.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - yori-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pyori_root_password"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s

  # Application backend YORI
  yori-backend:
    build: .
    container_name: yori-backend
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: yori_db
      DB_USER: yori_user
      DB_PASSWORD: yori_password
      JWT_SECRET: yori-super-secret-jwt-key-change-in-production-2025
      JWT_REFRESH_SECRET: yori-super-secret-refresh-key-change-in-production-2025
      JWT_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:3000
      UPLOAD_PATH: uploads
      MAX_FILE_SIZE: 5242880
      LOG_LEVEL: info
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - yori-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mysql_data:
    driver: local

networks:
  yori-network:
    driver: bridge